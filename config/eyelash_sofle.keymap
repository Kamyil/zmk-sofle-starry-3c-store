#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <400>;
    acceleration-exponent = <1>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp LS(LG(NUMBER_4))  &kp N1                &kp N2     &kp N3        &kp N4        &kp N5    &kp UP_ARROW     &kp N6     &kp N7     &kp N8         &kp N9         &kp N0     &rgb_ug RGB_TOG
&kp TAB               &kp Q                 &kp W      &kp E         &kp R         &kp T     &kp DOWN_ARROW   &kp Y      &kp U      &kp I          &kp O          &kp P      &kp SINGLE_QUOTE
&kp ESCAPE            &kp A                 &kp S      &kp D         &kp F         &kp G     &kp LEFT_ARROW   &kp H      &kp J      &kp K          &kp L          &kp SEMI   &kp ENTER
&kp LEFT_SHIFT        &kp Z                 &kp X      &kp C         &kp V         &kp B     &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA      &kp DOT        &kp FSLH   &kp BACKSPACE
&kp C_MUTE            &kp LG(LS(NUMBER_5))  &kp LCTRL  &kp LEFT_ALT  &kp LEFT_GUI  &mo 1     &kp ENTER        &kp SPACE  &kp RCTRL  &kp RIGHT_ALT  &kp RIGHT_GUI  &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp F3                 &kp C_BACKLIGHT_TOGGLE  &rgb_ug RGB_BRD      &mmv MOVE_UP     &rgb_ug RGB_BRI       &kp C_PREVIOUS         &kp C_PLAY_PAUSE  &kp C_NEXT            &kp F10                &trans
&trans      &kp GRAVE             &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET        &kp RIGHT_BRACKET    &mmv MOVE_DOWN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp MINUS              &kp EQUAL
&trans      &kp SEMICOLON         &kp SINGLE_QUOTE      &kp BACKSLASH          &kp EQUAL               &kp COLON            &mmv MOVE_LEFT   &kp LEFT_ARROW        &kp DOWN               &kp UP_ARROW      &kp RIGHT_ARROW       &kp LG(LEFT_BRACKET)   &kp RIGHT_BRACKET
&trans      &kp EXCL              &kp AT                &kp HASH               &kp DOLLAR              &kp PERCENT          &mmv MOVE_RIGHT  &kp CARET             &kp AMPERSAND          &kp STAR          &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp C_MUTE  &trans                &trans                &trans                 &trans                  &trans               &mkp LCLK        &trans                &trans                 &trans            &trans                &trans
            >;

            display-name = "layer1";
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP     &kp F6                &kp F7                 &kp F8            &kp F9             &kp F10      &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp UNDER    &kp PLUS
&trans     &out OUT_USB  &out OUT_BLE    &trans        &trans        &trans          &mmv MOVE_LEFT   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDERSCORE    &kp EQUAL          &kp LBRC     &kp RBRC
&trans     &sys_reset    &trans          &bootloader   &trans        &trans          &mmv MOVE_RIGHT  &kp MINUS             &kp PLUS               &sys_reset        &soft_off          &bootloader  &trans
&trans     &trans        &trans          &trans        &trans        &trans          &mkp LCLK        &trans                &trans                 &trans            &trans             &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
